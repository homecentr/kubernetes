{{- range $volume := $.Values.volumes -}}
{{- $volumeData := dict "volume" $volume "Release" $.Release "Chart" $.Chart -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-path-provisioner-{{ $volume.name | required "volumes.<volume>.name is required" }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "common-labels-volume" $volumeData | indent 4 }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/config-map.yml") $ | sha256sum }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: local-path-provisioner
      app.kubernetes.io/instance: {{ $.Release.Name }}
      homecentr.one/volume: {{ $volume.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: local-path-provisioner
        app.kubernetes.io/instance: {{ $.Release.Name }}
        homecentr.one/volume: {{ $volume.name }}
    spec:
      serviceAccountName: local-path-provisioner
      securityContext:
        allowPrivilegeEscalation: false
        runAsNonRoot: true
      containers:
        - name: local-path-provisioner
          image: rancher/local-path-provisioner:{{ $.Values.imageVersion | required ".Values.imageVersion is required" }}
          imagePullPolicy: IfNotPresent
          command:
            - local-path-provisioner
            - --debug
            - start
            - --config
            - /etc/config/config.json
            - --configmap-name
            - local-path-provisioner-{{ $volume.name }}
            - --service-account-name
            - local-path-provisioner
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config/
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {{- $.Values.resources | toYaml | nindent 12 }}
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
      volumes:
        - name: config-volume
          configMap:
            name: local-path-provisioner-{{ $volume.name }}
{{ end }}