apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "common.resource-labels" . | indent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "common.pod-labels" . | indent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "common.pod-labels" . | indent 8 }}
    spec:
      runtimeClassName: nvidia
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: homecentr.one/tpu
                operator: In
                values:
                - "true"
              - key: nvidia.com/gpu.present
                operator: In
                values:
                - "true"
              
              # TODO: Remove the custom gpu tag via platform repository
      securityContext:
        # runAsNonRoot: false
        # fsGroupChangePolicy: Always
        # seccompProfile:
        #   type: RuntimeDefault
        # seLinuxOptions:
        #   user: system_u
        #   role: system_r
        #   type: container_t
        #   level: s0:c829,c861
      automountServiceAccountToken: false
      containers:
        - name: frigate
          image: 'ghcr.io/blakeblackshear/frigate:{{ .Values.imageTag }}'
          imagePullPolicy: null
          ports:
            - name: http
              protocol: TCP
              containerPort: 5000
            - name: rtmp
              protocol: TCP
              containerPort: 1935
          env:
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: MPLCONFIGDIR
              value: /tmp/matplot
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: "all"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "all"
            - name: FRIGATE_RTSP_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: rtspUser
            - name: FRIGATE_RTSP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: rtspPassword
          livenessProbe:
            httpGet:
              path: /api/version
              port: http
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 1
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /api/version
              port: http
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 1
            initialDelaySeconds: 60
          volumeMounts:
            - name: coral-dev
              mountPath: {{ .Values.coralHostPath }}
            - name: database-pvc
              mountPath: "/db"
            - name: media-pvc
              mountPath: "/media/frigate"
            - name: dshm
              mountPath: /dev/shm
            - name: tmp
              mountPath: /tmp
            - name: run
              mountPath: /run
            - name: nginx-logs
              mountPath: /usr/local/nginx/logs
            - name: nginx-client-body-temp
              mountPath: /usr/local/nginx/client_body_temp
            - name: nginx-proxy-temp
              mountPath: /usr/local/nginx/proxy_temp
            - name: nginx-fastcgi-temp
              mountPath: /usr/local/nginx/fastcgi_temp
            - name: nginx-uwsgi-temp
              mountPath: /usr/local/nginx/uwsgi_temp
            - name: nginx-scgi-temp
              mountPath: /usr/local/nginx/scgi_temp
            - name: config
              mountPath: "/config/config.yml"
              subPath: frigate.yml
              readOnly: true
          securityContext:
            privileged: true # To allow using Coral USB
            runAsNonRoot: false
            readOnlyRootFilesystem : true
            procMount: Default
            # allowPrivilegeEscalation: false
            # capabilities:
            #   drop:
            #     - ALL
            # seccompProfile:
            #   type: RuntimeDefault
            # seLinuxOptions:
            #   user: system_u
            #   role: system_r
            #   type: container_t
            #   level: s0:c829,c861
          resources: {{ .Values.resources | toYaml | nindent 14 }}
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      volumes:
        - name: coral-dev
          hostPath:
            path: {{ .Values.coralHostPath }}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.shmSize }}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.cacheSize }}
        - name: run
          emptyDir: {}
        - name: nginx-logs
          emptyDir: {}
        - name: nginx-client-body-temp
          emptyDir: {}
        - name: nginx-proxy-temp
          emptyDir: {}
        - name: nginx-fastcgi-temp
          emptyDir: {}
        - name: nginx-uwsgi-temp
          emptyDir: {}
        - name: nginx-scgi-temp
          emptyDir: {}
        - name: database-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-database
        - name: media-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-media
        - name: config
          configMap:
            name: {{ .Release.Name }}
            defaultMode: 0444
            items:
            - key: frigate.yml
              path: frigate.yml