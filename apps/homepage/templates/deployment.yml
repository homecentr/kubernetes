apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "common.resource-labels" . | indent 4 }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/config-map.yml") $ | sha256sum }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "common.pod-labels" . | indent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "common.pod-labels" . | indent 8 }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: Always
        seccompProfile:
          type: RuntimeDefault
        seLinuxOptions:
          user: system_u
          role: system_r
          type: container_t
          level: s0:c829,c861
      automountServiceAccountToken: true
      containers:
        - image: 'ghcr.io/gethomepage/homepage:{{ .Values.imageTag }}'
          imagePullPolicy: null
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          name: homepage
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /app/config
              name: config
            - mountPath: /app/public/icons
              name: icons
            - mountPath: /app/config/logs
              name: logs
            - mountPath: /app/.next
              name: cache
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem : true
            procMount: Default
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            seLinuxOptions:
              user: system_u
              role: system_r
              type: container_t
              level: s0:c829,c861
          resources: {{ .Values.resources | toYaml | nindent 14 }}
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      serviceAccountName: {{ .Release.Name }}
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}
        - name: icons
          configMap:
            name: {{ .Release.Name }}-icons
        - name: logs
          emptyDir:
        - name: cache
          emptyDir:
      initContainers:
        - name: cache-prep
          image: 'ghcr.io/benphelps/homepage:{{ .Values.imageTag }}'
          command: [sh, -ec]
          volumeMounts:
            - mountPath: /.next
              name: cache
          args:
            - cp -R /app/.next/* /.next
