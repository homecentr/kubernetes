apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "common.resource-labels" . | indent 4 }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/config-map.yaml") $ | sha256sum }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "common.pod-labels" . | indent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "common.pod-labels" . | indent 8 }}
        homecentr.one/antiaffinity: proxmox-proxy
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: Always
        seccompProfile:
          type: RuntimeDefault
        seLinuxOptions:
          user: system_u
          role: system_r
          type: container_t
          level: s0:c829,c861
      automountServiceAccountToken: false
      # Allow running on any node
      tolerations:
        {{- include "common.critical-only" . | indent 8 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: homecentr.one/antiaffinity
                  operator: In
                  values:
                  - proxmox-proxy
      containers:
        - image: library/nginx:stable
          imagePullPolicy: null
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            httpGet:
              port: 80
              path: /health
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            httpGet:
              port: 80
              path: /health
            timeoutSeconds: 1
          name: nginx
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: config
              subPath: nginx.conf
            - mountPath: /var/cache/nginx
              name: cache
            - mountPath: /tmp/nginx
              name: tmp
            - mountPath: /var/run
              name: run
            - mountPath: /docker-entrypoint.d/
              name: docker-entrypoint
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem : true
            procMount: Default
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
            seLinuxOptions:
              user: system_u
              role: system_r
              type: container_t
              level: s0:c829,c861
          resources: {{ .Values.resources | toYaml | nindent 14 }}
      dnsPolicy: ClusterFirst
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}
        - name: cache
          tmpDir: {}
        - name: tmp
          tmpDir: {}
        - name: run
          tmpDir: {}
        - name: docker-entrypoint
          tmpDir: {}