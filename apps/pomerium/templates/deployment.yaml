apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium-controller
  namespace: pomerium
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium-gen-secrets
  namespace: pomerium
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium-controller
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  - secrets/status
  - endpoints/status
  verbs:
  - get
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ingress.pomerium.io
  resources:
  - pomerium
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ingress.pomerium.io
  resources:
  - pomerium/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium-gen-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pomerium-controller
subjects:
- kind: ServiceAccount
  name: pomerium-controller
  namespace: pomerium
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium-gen-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pomerium-gen-secrets
subjects:
- kind: ServiceAccount
  name: pomerium-gen-secrets
  namespace: pomerium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  annotations:
      metallb.universe.tf/allow-shared-ip: pomerium
      metallb.universe.tf/loadBalancerIPs: 10.1.8.132
  name: pomerium-metrics
  namespace: pomerium
spec:
  ports:
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/name: pomerium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium-proxy
  namespace: pomerium
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: pomerium
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium
  namespace: pomerium
spec:
  replicas: {{ .Values.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: pomerium
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pomerium
    spec:
      containers:
      - args:
        - all-in-one
        - --pomerium-config=global
        - --update-status-from-service=$(POMERIUM_NAMESPACE)/pomerium-proxy
        - --metrics-bind-address=$(POD_IP):9090
        env:
        - name: TMPDIR
          value: /tmp
        - name: XDG_CACHE_HOME
          value: /tmp
        - name: POMERIUM_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: pomerium/ingress-controller:sha-cdc389c
        imagePullPolicy: IfNotPresent
        name: pomerium
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 5000m
            memory: 1Gi
          requests:
            cpu: 300m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        runAsNonRoot: true
      serviceAccountName: pomerium-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: tmp
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  name: pomerium-gen-secrets
  namespace: pomerium
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pomerium
      name: pomerium-gen-secrets
    spec:
      containers:
      - args:
        - gen-secrets
        - --secrets=$(POD_NAMESPACE)/bootstrap
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: pomerium/ingress-controller:main
        imagePullPolicy: IfNotPresent
        name: gen-secrets
        securityContext:
          allowPrivilegeEscalation: false
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: pomerium-gen-secrets
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/name: pomerium
  annotations:
    ingressclass.kubernetes.io/is-default-class: {{ .Values.defaultIngressClass }}
  name: pomerium
spec:
  controller: pomerium.io/ingress-controller